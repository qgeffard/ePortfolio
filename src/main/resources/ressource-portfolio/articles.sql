-- phpMyAdmin SQL Dump
-- version 3.5.1
-- http://www.phpmyadmin.net
--
-- Client: localhost
-- Généré le: Mer 27 Mars 2013 à 11:05
-- Version du serveur: 5.1.50-community
-- Version de PHP: 5.4.3

SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- Base de données: `portfolio`
--

--
-- Contenu de la table `article`
--

INSERT INTO `article` (`id`, `nom`,`detail`) VALUES
(1, 'GeTAP : refactoring  avec tests unitaires','<div style="text-align: center;"><strong>Membres :</strong><br/>Nicolas BARROSO<br/>Antoine FIDALGO<br/>Quentin GEFFARD<br/>Florian LAFOREST<br/><a href="https://github.com/qgeffard/TPGetapTU"><strong>Lien vers le projet GitHub</strong></a></div><h1>1/Contexte</h1><h2>Le problème :</h2>L''''application GeTAP initiée au cours du printemps 2011 entrera bientôt en phase de déploiement. Nous souhaitons que le code source exprime de façon plus claire, plus communicante, les différentes transitions responsables des changements d''''état de l''''objet central de cette application, à savoir les demandes de validation de consommation de temps d''''accompagnement personnalisé (DVCTAP) représentées par la classe DemandeValidationConsoTempsAccPers.<h2>La plateforme de travail :</h2>Pour les besoins de cette mission, un morceau de l''''application a été extrait de son contexte technique (hors certaines dimensions techniques du web : pas de mvc, spring, tomcat, jsp...)<h2>Diagramme d''''état transitions fourni :</h2><img alt="Diagramme etat" src="../../../img/refactoring/img1.png" /><br/>A partir de ce contexte et d''''après le TP proposé nous avons commencé par établir un diagramme de classe de l''''existant afin de mieux comprendre la logique de l''''application.<h1>2/ Diagramme de classes UML de l''''existant</h1><img alt="Diagramme de classes" src="../../../img/refactoring/img2.png" /><br/>La classe DemandeValidationConsoTempsAccPers est la classe représentant une demande de consommation de temps d''''aide personnalisée. Cette classe est reliée à la classe User par une association 1-1 pour un User de type « prof » et par une même relation mais pour un User de type « eleve » car une demande de ce type a besoin de deux User pour être complète. Cette classe a aussi besoin d''''un « AccPersonalise » d''''où l''''association de « DemandeValidationConsoTempsAccPers » vers « AccPersonalise ». Nous avons ensuite la classe User qui en plus de ses relations avec « DemandeValidationConsoTempsAccPers » possède des associations avec « Classe » et « Discipline » car un User de type « prof » aura besoin d''''une discipline(discipline enseignée), et n''''importe quel type de User appartient au moins à une classe.Nous avons ensuite créé une classe Exemple qui nous a servi à tester les limites de l''''existant.<h1>3/ Classe Exemple</h1>Voici la classe exemple attendu dans notre mission :<br/><img alt="Code" src="../../../img/refactoring/img3.png" /><br/>Une fois la classe exemple créée on s''''est aperçu que l''''état pouvait être changé à n''''importe quel moment et dans n''''importe quelle situation : chose qui ne devrait pas être possible. Exemple, un élève ne devrait pas pouvoir modifier sa demande une fois que le prof y est lui-même apporté ses modifications. Nous avons donc créé toute une batterie de tests unitaires afin de comprendre et de pouvoir modifier en conséquence le code du programme.<h1>4/ TESTS UNITAIRES</h1>Classe de test :<br/><img alt="Code" src="../../../img/refactoring/img4.png" /><br/><img alt="Code" src="../../../img/refactoring/img6.png" /><h1>5/ JAVADOC</h1>Pour finir nous avons commenté toutes les méthodes à la sauce JAVADOC. Pour cela nous sommes allés étudier cette méthode de commentaire sur le Site Du Zéro. Ci-dessous un exemple d''''une de nos fonctions commentée façon JAVADOC.<img alt="Code" src="../../../img/refactoring/img5.png" /><br/>L''''outil JAVADOC permet, en inspectant le code Java des classes, de produire une documentation très complète de l''''application. Pour ce faire, il existe une multitude de TAGS permettant de commenter correctement ses méthodes : chacun permettant d''''apporter des précisions sur la méthode. En voici un extrait :<ul><li>@return</li>	<li>@param</li>	<li>@throws</li>	<li>@author</li>	<li>@version</li><li>@see</li>	<li>@since</li>	<li>@serial</li>	<li>@deprecated</li></ul>'),
(2, 'GeTAP : intégration avec tests unitaires','<div style="text-align:center;"><strong>Équipe :</strong><br/>Nicolas BARROSO<br/>Antoine FIDALGO<br/>Quentin GEFFARD<br/>Florian LAFOREST</div><h1>1/ Contexte</h1>Nous sommes intervenus sur des éléments du projet GeTAP. Pour le bon déroulement des opérations précédentes, ces éléments ont été extraits de ce projet. Notre mission à consisté à intégrer notre travail dans le projet en place (<a href="contexte">voir contexte GeTAP</a>).Cette intégration ne se fait jamais directement sur une application en production. Nous avons effectué ce travail à partir d’un fork du projet GeTAP dans sa version actuelle :<br/><a title="prolog-getap" href="https://github.com/sio-melun/prolog-getap" target="_blank">https://github.com/sio-melun/prolog-getap</a><h3>Le but de notre travail d’intégration :</h3>La classe DVCTAP dispose maintenant de méthodes gérant le cycle de vie typique d’une instance DVCTAP. Actuellement l’application gère les changements d’états en modifiant la valeur de l’attribut etat d’une instance de DVCTAP directement via son setter ou d’autres méthodes spécifiques antérieures à notre travail. Il faut donc modifier ce comportement interne afin de passer dorénavant par les méthodes responsables des transitions, en intégrant en plus une gestion des exceptions.<img class="alignnone size-large wp-image-40" alt="getap" src="../../../img/integration/img1.png" width="500" height="358" /><br/><h1>2/ Démarche</h1><h3>1. Phase d’intégration :</h3>Nous avons commencé par remplacer le fichier « DemandeValidationConsoTempsAccPers.java » par celui créé dans le précédent projet (voir rapport sur le REFACTORING de GeTAP). Afin de s’assurer que l’application fonctionnait toujours nous avons également intégré les tests unitaires testant la classe que nous venions d’intégrée (images ci-dessous).<br/><img class="alignnone size-large wp-image-41" alt="testintegration" src="../../../img/integration/img2.png" width="600" height="161" /><br/>Les tests étant concluants, il a fallu adapter le comportement des autres activités de GeTAP se référençant à la classe « DemandeValidationConsoTempsAccPers.java » afin de pouvoir y intégrer les nouvelles méthodes (renommage).<h3>2. Modification pour les vues :</h3>Ci-dessous, le remplacement de simples tests d’égalité de l’état par les méthodes appropriées (isser) ce qui rend le code beaucoup plus lisible et compréhensible pour le développeur. Cela nous a permis en priorité de ne plus travailler avec de simple valeur entière mais de gérer les différents état avec un masque de bits.<br/><img class="alignnone size-full wp-image-42" alt="ti2" src="../../../img/integration/img3.png" width="450" height="41" /><br/>Voici l’exemple de la fonction isModifieeEleve utilisée dans la vue précédente. C’est une méthode qui retourne un boolean créé par le test d’égalité entre 0 et la valeur retourné par l’opérateur &amp; sur l’état et la constante MODIFIEE_ELEVE. Ce qui permet de savoir si le bit voulu a été levé ou non.<span style="color:#950055;">public boolean</span> isModifieeEleve() {<span style="color:#950055;">return</span> (<span style="color:#950055;">this</span>.etat &amp; MODIFIEE_ELEVE) != 0;}<h3>3. Modification d’un controller :</h3><img class="alignnone size-full wp-image-43" alt="ti3" src="../../../img/integration/img4.png" width="600" height="110" /><br/>Comme pour les getter/setter de l’exemple précédent, nous avons remplacé, dans les controllers, les mécanismes de comparaison de valeurs pour intégrer le système de masque de bit.<h3>4. Ajout des loggers :</h3>Nous avons intégré, dans les attributs de la classe DVCTAP, un logger :<span style="color:#950055;">private final</span> Logger <span style="color:#2a00ff;">logger</span> = LoggerFactory.getLogger(DemandeValidationConsoTempsAccPers.<span style="color:#950055;">class</span>);Il nous a fallu rajouter dans le fichier « log4j.xml » un niveau remontant les informations sur ce logger. Le scope dans le « log4j.xml » permet d’affiner le renseignement des informations loggées.<br/><br/><span style="color:#645fd3;">&lt;!– Application logger –&gt;</span><p style="text-align:left;"><span style="color:#3f7f7f;">&lt;logger</span> <span style="color:#950055;">name</span>=<span style="color:#2a00ff;">"org.ldv.sio.getap.app"</span><span style="color:#3f7f7f;">&gt;</span><br/><span style="color:#3f7f7f;">&lt;level</span> <span style="color:#950055;">value</span>=<span style="color:#2a00ff;">"info"</span> <span style="color:#3f7f7f;">/&gt;</span><br/><span style="color:#3f7f7f;">&lt;/logger&gt;</span></p>Nous avons pu ensuite ajouter à nos méthodes getter/setter des loggers nous permettant de vérifier le passage par la méthode concernée.Date dateLog = <span style="color:#950055;">new</span> Date();<span style="color:#2a00ff;">logger</span>.info(<span style="color:#2a00ff;">"\\\\n MODIFICATION PAR ELEVE : "</span> + dateLog + <span style="color:#2a00ff;">"\\\\n "</span>+ <span style="color:#950055;">this</span>.toString());<h1>3/ Conclusion</h1>Le système de masque binaire a donc été intégralement implémenté dans l’existant. Les tests unitaires ont accompagnés le bon déroulement de cette opération sans modifier le bon comportement initial de GeTAP. L’ajout des instructions de logs a permis de vérifier la prise en charge des méthodes intégrées dans l’existant.\r\n'),
(3, 'TSLAP : premiers pas avec l''Ajax','<p>L’article suivant a été rédigé dans le cadre d’un projet d’application web codé en JAVA à l’aide de l’outil de développement Spring ROO qui s’appuie sur le Framework Spring.Le but de cette article va être de modifier la valeur d’un tableau sans avoir à recharger tout le tableau en rechargeant la page.</p><h4>Tout d’abord, qu’est ce que l’AJAX ?</h4><p>La définition est Asynchronous Javascript And Xml. Il ne s’agit donc pas d’une technologie en elle même, mais d’un concept permettant de faire des appels asynchrones au serveur depuis le client. Le serveur pourra retourner soit du Xml, du texte, du JSON … qui sera traité par le Javascript. Ce concept va nous permettre de modifier/ajouter des éléments sur la page en cour sans avoir à recharger celle-ci.</p><h4>Utilisation : l’objet XmlHttpRequest</h4>Nous allons créer en Javascript un objet du type XmlHttpRequest (ou xhr) qui va nous permettre d’effectuer nos requêtes http et d’échanger du Xml avec le serveur<br/><br/><img class="alignnone size-large wp-image-24" alt="img12" src="../../../img/ajax/img1.png" width="450" height="196" /><br/><br/>Nous avons maintenant sous la main un objet XHR prêt à travailler pour nous. Celui-ci possède plusieurs méthodes et propriétés disponibles à cette adresse : <a href="http://siddh.developpez.com/articles/ajax" target="_blank">http://siddh.developpez.com/articles/ajax</a><br/><br/>Nous créons maintenant notre propre fonction qui grâce à onreadystatechange sera appelée à chaque changement d’état de notre objet XHR. On appellera cette fonction “go()” . On lui passe plusieurs paramètres : “element” qui est de type text et qui nous permettra de définir un texte approprié dans la fenêtre d’alerte qui s’affichera, “value” qui correspond à la valeur actuelle de la cellule sélectionnée et “position” qui contient à la fois l’id de la ligne et le numéro de la colonne. Les deux données étant séparées par un tiret ( – ). Pour plus de clarté nous allons définir des constantes : CLIENT, NUM_CDE_ACHAT_ARISTOTE , … Ces constantes correspondent en fait à des colonnes ! Ainsi dans notre exemple nous avons une colonne Client, une colonne Fournisseur etc … et donc une colonne Numéro de Commande Achat Aristote. On sépare ensuite les données contenues dans “position” dans deux autres variables : “id” pour le numéro de ligne et “pos” pour le numéro de colonne. On définit enfin une variable “saisie” qui va contenir la nouvelle saisie de l’utilisateur.<br/><br/><img class="alignnone size-large wp-image-25" alt="img8" src="../../../img/ajax/img2.png" width="450" height="115" /><br/><br/>On attaque ensuite le coeur du système. On teste notre variable “pos” (qui correspond à une colonne je vous le rappel) et dans un premier temps nous allons vérifier si cette variable est égale à la constante CLIENT (si nous nous trouvons bien dans la colonne Client !). Je vous rappel que notre file rouge concerne une modification de valeur dans un tableau en AJAX par le biais d’une prompt ! Le cas de la colonne Client étant de type “select” je n’expliquerais pas ici ce cas. Comme notre variable “pos” ne correspond pas à la constante CLIENT nous passons alors dans le “else” (dans notre application nous traitons tous les cas autre que les alert de type prompt qui, elles, correspondent au else). Nous récupérons alors dans le else la valeur saisie par l’utilisateur par le biais de la fonction prompt() à laquelle on passe en paramètre un texte personnalisé (“element”) et la valeur de base de la cellule de notre tableau (“value”).<br/><br/><img class="alignnone size-large wp-image-26" alt="img9" src="../../../img/ajax/img3.png" width="450" height="99" /><br/><br/>Il nous faut ensuite vérifier que la saisie de l’utilisateur n’est pas nulle. Nous instantion maintenant une variable de type XmlHttpRequest grâce à notre fonction getXhr() créée plus haut. On définit notre propre fonction qui sera appelée à chaque changement de l’état de notre objet grâce à la propriété onreadystatechange. Puis ensuite nous vérifions grâce aux propriétés vus plus haut si les données ont finit d’être chargées et si la réponse du serveur est ok. Les deux conditions suivante concernant CLIENT et FOURNISSEUR sont dans notre cas passé sans soucis puisque nous ne nous intéressons pas au cas de la colonne CLIENT et FOURNISSEUR. Comme ces conditions sont passées on met la réponse du serveur dans notre variable “saisie” grâce à la propriété responseText. On vérifie si notre variable “saisie” n’est pas nulle (si le serveur a retourné une réponse). Si elle n’est pas nulle alors on remplace la valeur du tableau par la réponse du serveur (la valeur entrée par l’utilisateur). Ceci clos notre fonction xhr.onreadystatechange function().<br/><br/><img class="alignnone size-large wp-image-27" alt="img10" src="../../../img/ajax/img4.png" width="450" height="239" /><br/><br/>C’est maintenant que nous allons définir la requête à envoyer au serveur. Avec des conditions nous vérifions la valeur de “pos” afin de connaitre la colonne dans laquelle la valeur veut être changée. Dans notre cas la valeur à changer se trouve dans la colonne correspondant à la constante NUM_CDE_ACHAT_ARISTOTE. Dans ce cas nous ouvrons par le biais de notre objet XHR et par sa fonction open() une connexion avec le serveur. Il s’agit dans notre cas d’une requête de type POST, qui pointe vers la méthode d’action “changeNumCdeAchatAristote” (c’est elle qui va se charger de persister la nouvelle donnée en base) et qui sera asynchrone. On définit ensuite le header à envoyer avec notre requête grâce à la fonction setRequestHeader(). Il nous suffit enfin d’utiliser la fonction send() à laquelle on passe le numéro de la ligne et la nouvelle valeur a entrer dans le tableau pour que la requête soit envoyée et exécutée de manière asynchrone.<br/><br/><img class="alignnone size-full wp-image-28" alt="img111" src="../../../img/ajax/img5.png" width="410" height="203" /><br/><br/><h4>Conclusion :</h4>L’AJAX a été mis en place dans cet exemple. Il est donc maintenant possible de recharger une partie unique du tableau sans avoir à recharger toute la page. Ce projet m’a donc permis d’apprendre et de mettre en œuvre ce concept qui est professionnel et incontournable.\r\n'),
(4, 'TSLAP : import de données au format CSV','<h1>Le problème :</h1><p>  Au cour du développement de l''''application du tableau de suivi de livraison pour Atoll Palme (TSLAP pour les intimes), il a fallu initialiser la base de données à travers un fichier csv fourni et permettre cette option pour   l''''administrateur du site au premier lancement d'' l''''application.<br/>  Pour ce faire, il faut gérer plusieurs cas :  <ul>    <li>Avoir le bon nombres d''''arguments sur une ligne</li>    <li>Ne pas insérer des lignes vides</li>    <li>Vérifier que les paramètres obligatoires sont renseignés</li>  </ul></p><h1>Récupérer le chemin du fichier</h1><p>  Pour ce faire, il faut créer un fichier java ayant 2 attributs (nom du type String et file du type CommonsMultipartFile). La valeur de l''''attribut file est le plus important, grâce à la méthode "getOriginalFilename",   on a le nom du fichier.<br/>  <img src="../../../img/tslap/formImport_file.png" alt="formImport_file.png"/><br/>  Le fichier sélectionné est sauvegardé dans le dossier temporaire du client d''''où la ligne : <br/>  String filePath = System.getProperty("java.io.tmpdir") + File.separatorChar + form.getFile().getOriginalFilename();<br/>  <ul>    <li>System.getProperty("java.io.tmpdir") : chemin du dossier temporaire</li>    <li>File.separatorChar : Caractère de séparation dans un chemin</li>    <li>form.getFile().getOriginalFilename() : nom du fichier</li>  </ul>  On utilise un BufferedReader couplé à la méthode "getLigne" afin de gérer les 2 premiers cas énoncés plus haut.<br/>  <img src="../../../img/tslap/code_importCsv_lecture_file.png" alt="code_importCsv_lecture_file.png"/></p><p>  Côté code source, il est nécessaire de créer un formulaire avec en paramètre un type enctype="multipart/form-data" et un champs input de type file.<br/>  <img src="../../../img/tslap/code_form_importCsv.png" alt="code_form_importCsv.png"/><br/>  En voici l''''aperçu initial :<br/>  <img src="../../../img/tslap/boite_dialog_import_csv.png" alt="boite_dialog_import_csv.png"/><br/>  Aperçu avec un fichier sélectionné : <br/>  <img src="../../../img/tslap/boite_dialog_import_csv_file_select.png" alt="boite_dialog_import_csv_file_select.png"/><br/>  Ensuite, pour permettre à l''''administrateur de pouvoir sélectionner un fichier et d''''utiliser le formulaire vu au-dessus, on a créé un bouton accessible uniquement à celui-ci.<br/>  <img src="../../../img/tslap/code_bouton_importCsv.png" alt="code_bouton_importCsv.png"/><br/>  L''''ouverture du formulaire est possible grâce à une fonction jquery qui utilise la méthode dialog("open").<br/>  <img src="../../../img/tslap/code_js_boite_dialog_importCsv_part2.png" alt="code_js_boite_dialog_importCsv_part2.png"/><br/>  Cela permet d''''utiliser la fonction dialog personnalisé. Celle-ci ouvre le formulaire vu au-dessus et créer 2 boutons (Envoyer et Annuler).<br/>  <img src="../../../img/tslap/code_js_boite_dialog_importCsv_part1.png" alt="code_js_boite_dialog_importCsv_part1.png"/><br/>  Lors du clique sur le bouton "Envoyer", cela ouvre une image de chargement qui reste visible le temps de l''''import et envoi le formulaire sur la méthode "importCsv".<br/>  <img src="../../../img/tslap/code_affichage_boite_chargement.png" alt="code_affichage_boite_chargement.png"/><br/>  <img src="../../../img/tslap/chargement_import_csv.png" alt="chargement_import_csv.png"/><br/></p><h1>Insertion des données</h1><p>  L''''insertion complète des données s''''effectue en plusieurs étapes : <br/>  <ul>    <li>Après récupération d''''une ligne, on la sépare en tableau de String en effactuant un slit sur le ";"</li>    <li>Création des différents Objets avec les paramètres du fichier envoyé</li>    <li>Une fois le tout envoyés dans la base de données, on passe à la ligne suivante</li>  </ul>  <img src="../../../img/tslap/code_importCsv_create_etats&role.png" alt="code_importCsv_create_etats&role.png"/><br/>  <img src="../../../img/tslap/code_importCsv_insert_donnees_1.png" alt="code_importCsv_insert_donnees_1.png"/><br/>  <img src="../../../img/tslap/code_importCsv_insert_donnees_2.png" alt="code_importCsv_insert_donnees_2.png"/><br/>  <img src="../../../img/tslap/code_importCsv_insert_donnees_3.png" alt="code_importCsv_insert_donnees_3.png"/><br/></p>\r\n'),
(5, 'TSLAP : comparaison de plugins', '\r\n<p>Au cour du projet tslap, nous devions impl&eacute;menter un plugin cot&eacute; client permettant la gestion dynamique de tableau de données, aucune condition n''&eacute;tait alors impos&eacute;e.</p>\r\n<p><span style="color: #008000;"><em>Comment choisir le bon ?</em></span></p>\r\n<p><span style="color: #008000;"><span style="color: #000000;">La premi&egrave;re &eacute;tape a &eacute;t&eacute; la recherche g&eacute;n&eacute;rale des plugins existants, </span></span>au fil des recherches, nos besoins s''affinaient. L''&eacute;dition des cellules multiplent ou non, l''&eacute;largissement automatique ou manuel des colonnes du tableau, le trie et les filtres mis en place sur les colonnes et/ou cellules, etc..</p>\r\n<p>Rapidement, nous en choisissions 3 r&eacute;pondant chacun &agrave; nos besoins &eacute;volutifs de mani&egrave;re plus ou moins complexe dans leur mise en phase de test. Chacun d''entre nous s''est vue responsabilis&eacute; &agrave; implémenter un des plugins pr&eacute;-s&eacute;lectionn&eacute;s et en &eacute;tudier les possibilit&eacute;s.</p>\r\n<p>Voici le protocole &agrave; respecter pour chacun d''eux :</p>\r\n<ul>\r\n<li>Importer le plugin dans le projet </li>\r\n<li>Mettre en place la démo propos&eacute;e </li>\r\n<li>Analyser les possibilit&eacute;es du plugin </li>\r\n<li>Comparaison aux autres plugins &eacute;tudi&eacute;s *</li>\r\n<li>Choix de la poursuite du developpement avec celui-ci *</li>\r\n</ul>\r\n<p>Les &eacute;tapes suivit d''une &eacute;toile (*) sont des &eacute;tapes faites en commun avec les autres plugins, nous les avons donc r&eacute;alis&eacute;e ensemble.</p>\r\n<br/>\r\n<p><em>Quentin:</em></p>\r\n<p>Plugin &eacute;tudi&eacute; : <strong>Handsontable Grid Editor</strong></p>\r\n<ol> </ol>\r\n<p>Raisons de sa pr&eacute;-s&eacute;lection :&nbsp;</p>\r\n<ol>\r\n<li>Grande ressemblance visuelle et fonctionnelle avec Excel</li>\r\n<li>Mise en phase de test simplifi&eacute; par une documentation compl&egrave;te</li>\r\n<li>Fonctionnalit&eacute;es int&eacute;ressantes comme l''&eacute;dition des cellules simple ou multiple en AJAX</li>\r\n<li>Communaut&eacute; importante proposant une aide éventuelle </li>\r\n</ol>\r\n<p><br />Site officiel :&nbsp; <a href="http://handsontable.com/">http://handsontable.com/</a></p>\r\n<p><span style="text-decoration: underline;"><strong>Fonctionnalit&eacute;s:</strong></span></p>\r\n<p>Ce tableur JS s''accompagne de plusieurs options bien pratiques:</p>\r\n<ul>\r\n<li> G&eacute;n&eacute;ration du tableur</li>\r\n<li> Ajout de cases de l&eacute;gendes pour les colonnes (avec choix des couleurs, polices...)</li>\r\n<li> Autocompl&eacute;tion des donn&eacute;es en cours de saisie</li>\r\n<li> Scrollbars pour naviguer dans le tableur</li>\r\n<li> Drag down d''une case sur une ou plusieurs autres (duplique la valeur de la case sur les autres)</li>\r\n<li> Contexte menu, qui apparaît au clic gauche sur une case pour proposer plusieurs actions (insertions de lignes, colonnes...)</li>\r\n<li> Callback apr&egrave;s saisie des donn&eacute;es sur une case</li>\r\n<li> Et plus encore, avec des conditions pour jouer sur l''affichage des donn&eacute;es (ex: couleurs rouges pour les chiffres n&eacute;gatifs, vertes pour les chiffres positifs...)</li>\r\n</ul>\r\n<p><span style="text-decoration: underline;"><strong><br /></strong></span></p>\r\n<p><span style="text-decoration: underline;"><strong>Utilisation:</strong></span></p>\r\n<p>Le plugin est assez simple d''utilisation: tout d''abord vous g&eacute;n&eacute;rez votre tableau sur l''&eacute;l&eacute;ment HTML voulu, en pr&eacute;cisant son nombre de lignes et colonnes et les options &agrave; appliquer dessus.</p>\r\n<p>Ensuite, vous d&eacute;clarez un array contenant les valeurs de chaque champ.</p>\r\n<p>Enfin, vous remplissez ("hydrate") votre tableur avec les donn&eacute;es contenues dans le array (si votre tableur n''est pas vierge &eacute;videmment !).</p>\r\n<p>&nbsp;</p>\r\n<p><span style="text-decoration: underline;"><strong>D&eacute;monstration:</strong></span></p>\r\n<p>Pour illustrer tout &ccedil;a, rien de tel qu''un exemple:</p>\r\n<p>\r\n<table style="height: 306px;" border="0" width="340">\r\n<tbody>\r\n<tr>\r\n<td>&lt;div id="tableur" class="dataTable"&gt;&lt;/div&gt;\r\n<p>&lt;script&gt;<br /> $("#tableur").handsontable({<br /> rows: 5,<br /> cols: 5,<br /> minSpareCols: 1,<br /> minSpareRows: 1,<br /> contextMenu: true<br /> });</p>\r\n<p>var data = [<br /> ["", "Djo", "Ouark", "Skwi", "Sybio"],<br /> ["2008", 10, 11, 12, 13],<br /> ["2009", 20, 11, 14, 13],<br /> ["2010", 30, 15, 12, 13]<br /> ];</p>\r\n<p>$("#tableur").handsontable("loadData", data);<br />&lt;/script&gt;</p>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</p>\r\n<p><span style="text-decoration: underline;"><strong>Le r&eacute;sultat:</strong></span></p>\r\n<p><img src="http://www.lafermeduweb.net/images/billets/2012-06/.orig/handsontable-tableur-demo2.jpg" alt="resultat" width="355" height="111" /></p>\r\n<br/>\r\n<p><span style="text-decoration: underline;"><strong><br /></strong></span></p>\r\n<p><em>Antoine :</em></p>\r\n<p>J''ai personnellement effectu&eacute; l''&eacute;tude du plugin DHTMLX (<a href="http://dhtmlx.com/docs/products/dhtmlxGrid/index.shtml">site officiel</a>). A premi&egrave;re vu le plugin semble complet et permet notamment de mettre en place un tableau éditable par double clique sur une cellule. Je me suis donc, dans un premier temps lance&eacute; dans le tutoriel concernant le plugin en g&eacute;n&eacute;ral (<a href="http://docs.dhtmlx.com/doku.php?id=tutorials:tut_quickstart">tutoriel</a>). Ce tutoriel &eacute;tait r&eacute;dig&eacute; pour le PHP mais me permettrait de comprendre les base de l''impl&eacute;mentation du plugin. Une fois le tutoriel bien avanc&eacute; j''ai d&eacute;cid&eacute; de me recentr&eacute; et essay&eacute; de mettre en place cette technologie pour le JAVA et donc dans notre projet (<a href="http://docs.dhtmlx.com/doku.php?id=dhtmlxconnectorjava:init">tutoriel JAVA</a>). L''int&eacute;gration du plugin n''a pas &eacute;t&eacute; imm&eacute;diate pusiqu''il a fallu l''adapt&eacute; &agrave; la structure de notre projet Spring Roo. C''est d''ailleurs d''ici qu''est venu son principal probl&egrave;me : la connexion &agrave; la base de donn&eacute;es via le JAVA Connector. En effet celui ci n&eacute;cessite de cr&eacute;er une connexion &agrave; la base via le service JDBC. Cependant l''application poss&egrave;de d&eacute;j&agrave; via Spring son propre syst&egrave;me de connexion. Ce type de connexion repr&eacute;sente donc d''une part une faille de s&eacute;curit&eacute; potentiel et ne respecte pas les couches de l''application.</p>\r\n<br/>\r\n<p><em>Florian:</em></p>\r\n<p>J''ai travaill&eacute; sur le plugin <a href="http://datatables.net/" target="_blank">DataTable</a> &eacute;cris gr&acirc;ce &agrave; la librairie JQuery et qui permet de g&eacute;rer simplement les tables HTML. Il s''agit d''un outil tr&egrave;s souple, fond&eacute;e sur les bases de l''am&eacute;lioration progressive, qui va ajouter des contr&ocirc;les d''interaction avanc&eacute;es &agrave; une table HTML.</p>\r\n<p>Ce plugin est facile d''int&eacute;gration, il n&eacute;cessite une seule ligne de code :</p>\r\n<p>$(document).ready(function() {<br /><span style="display:block;text-indent:20px;">$(''#exempleTable'').dataTable();<br />});</span></p>\r\n<p>Celui-ci dispose de fonctionnalit&eacute;s int&eacute;ressantes tel qu''une navigation fluide gr&acirc;ce au syst&egrave;me de pagination, recherche et tri.<br />Il est possible de charger les donn&eacute;es en AJAX si les donn&eacute;es du tableau sont trop volumineuse avec la gestion de la pagination, des tris et de la recherche qui peut &ecirc;tre r&eacute;alis&eacute; c&ocirc;t&eacute; serveur (utilisation du format JSON).<br />Et aussi d''exporter les donn&eacute;es de la table sous divers formats (PDF, CVS, XLS, aper&ccedil;u avant impression...) avec la possibilit&eacute; de choisir les colonnes &agrave; exporter.<br />Il est personnalisable gr&acirc;ce aux diff&eacute;rents th&egrave;mes disponibles sur le site de <a href="http://jqueryui.com/" target="_blank">JQueryUI</a>.<a href="http://jqueryui.com/" target="_blank"><br /></a></p>\r\n<p>&nbsp;</p>\r\n<p><h4>Solution retenue:</h4></p><p>Après comparaison des ces trois plugins, nous avons décidé de garder celui étudié par Florian. En effet le plugin étudié par Antoine ne respectant pas la structure même du projet nous avons décidé de ne pas le retenir. Le choix c''est donc fait entre le plugin étudié par Quentin et celui étudié par Florian. Le plugin de Quentin c''est avéré complet mais complexe à retoucher. La moindre modification du plugin nécessitait de rentrer dans le code même du plugin qui n''était pas très accessible. Nous avons donc retenue la solution étudiée par Florian qui consistait à produire une partie du plugin soit même et à rajouter certaine fonctionnalité grâce au plugin DataTable.</p>'),
(6, 'TSLAP : contexte','<p><h4> Contexte </h4></p>\r\n<p>Etudiants en seconde année de BTS « Service Informatique aux Organisations » option « développement d''application » au lycée Léonard de Vinci à Melun, j''ai, avec mes deux collègues, mené de nombreux projets. Et c''est au sein de ce second stage que nous avons pris part au développement d''une nouvelle application web. Cette mission avait pour but de rendre accessible, via une application web, la gestion de suivis des commandes de l''entreprise Atoll Palme. Pour ce faire, nous avons utilisé les technologies vues en cours, à savoir le Framework SPRING et l''outil de développement SPRING ROO. Nous vous renvoyons sur le site internet de <a href="http://www.springsource.org/spring-framework">SPRING : Framework SPRING</a>. Afin de pouvoir travailler en commun sur la même application nous l''avons montée sur la plateforme de gestion de version <a href="http://www.github.com">Github</a>. Puis nous avons créée, pour notre organisation, un tableau de tâches sur <a href="https://www.trello.com">Trello</a>.</p>\r\n<img src="../../../img/tslap/login_admin.png"/>\r\n<p><h4> La Société Atoll Palme</h4></p>\r\n<p>En quelques mots\r\nATOLL PALME est une société française de « Commerce de Gros » inter-entreprise  dans le domaine du textile et de la joaillerie qui possède le statut juridique de SARL.\r\nQui sont-ils ?\r\n\r\nGilles Poupard Directeur Général des marques de prêt-à-porter et d''accessoires\r\nde mode ATOLL et PALME a créé la société ATOLL en 1981 et a commencé\r\nà diffuser les produits jeune ethnique à des prix très attractifs sur la Côte d''Azur.\r\n\r\nAprès une forte croissance et une certaine réussite, la société se structure\r\nà partir des années 1990 pour répondre à la demande des centrales d''achat\r\net des détaillants.\r\n\r\nGilles Poupard développe une expertise dans le domaine\r\ndu SOURCING Textile de l''Indonésie à la Chine en passant par l''Inde, le Népal,\r\nles Philippines, l''Équateur, le Pérou.\r\n\r\nLa société développe des relations privilégiées avec des économies artisanales \r\ndans chacun des pays cités par le développement de la production d''articles de mode\r\nà fortes valeurs ajoutées.\r\n\r\nAu cours de ces années, Gilles Poupard a développé le concept\r\nde «home industry» et propose dans ses collections de prêt-à-porter\r\net d''accessoires de mode des produits authentiques et très tendances.\r\n\r\nSite internet Atoll Palme\r\n</p>'),
(7, 'TSLAP : guide utilisateur','<h4>Sommaire</h4>\r\n<ul>\r\n	<li><a href="#se_connecter">Se connecter</a></li>\r\n	<li><a href="#tableau_suivis">Interface</a></li>\r\n	<li><a href="#creation">Créer une commande</a></li>\r\n	<li><a href="#edition">Editer une commande</a></li>\r\n</ul>\r\n<br/>\r\n<h4 id="se_connecter">Se connecter</h4>\r\n<p>Une fois l''application lancée vous arriverez directement sur la page de login de l''application. Renseigner alors votre login dans le champ "login" et votre mot de passe dans le champs "Mot de passe". Ce mot de passe vous sera fourni par l''administrateur lors de la mise en production de l''application.</p>\r\n<img src="../../../img/tslap/login_admin.png"/>\r\n<br/>\r\n<br/>\r\n<h4 id="tableau_suivis">Le tableau de suivis de commandes </h4>\r\n<p> Une fois connecté, vous arriverez sur la page principale de l''application : le tableau de suivis de commandes. Ce tableau regroupe, initialement, les livraisons vous concernant.</p>\r\n\r\n<img src="../../../img/tslap/tableau_docu.png"/>\r\n<ul>\r\n	<li>1 : bouton pour accéder à l''interface de création d''une nouvelle commande.</li>\r\n	<li>2 : bouton permettant d''afficher uniquement les suivis vous concernant.</li>\r\n	<li>3 : liste permettant d''afficher les suivis des autres utilisateurs.</li>\r\n	<li>4 : liste permettant d''afficher les suivis par date.</li>\r\n	<li>5 : liste permettant d''afficher les suivis par client.</li>\r\n	<li>6 : liste permettant d''afficher les suivis par état.</li>\r\n	<li>7 : boutons d''option permettant l''export des données du tableau sous différents formats, l''impression.</li>\r\n	<li>8 : liste permettant de gérer le nombre de suivis affichés par page dans le tableau.</li>\r\n	<li>9 : champs permettant d''effectuer une recherche sur les suivis déjà affichés.</li>\r\n	<li>10 : bouton permettant d''accéder à plusieurs options de filtrage sur les suivis déjà affichés.</li>\r\n	<li>11 : options de pagination</li>\r\n	<li>12 : possibilité de cliquer sur une en-tête de colonne pour trier les suivis par ce critère.</li>\r\n	<li>13 : bouton de déconnexion</li>\r\n</ul>\r\n<br/>\r\n<h4 id="creation">Créer une nouvelle commande</h4>\r\n<p>Pour créer une nouvelle commande cliquez sur le bouton "Créer un nouveau suivi de commande". Renseignez ensuite les champs et valider la création en cliquant sur le bouton "Créer le suivi" en bas de la fenêtre. Si vous souhaitez annuler la création cliquez sur le bouton "Annuler".</p>\r\n<img src="../../../img/tslap/creer_docu.png"/>\r\n<br/>\r\n<h4 id="edition">Editer une cellule du tableau</h4>\r\n<p>Pour éditer une cellule du tableau double cliquez sur celle-ci. La cellule s''agrandi alors et un éditeur de texte apparaît. Vous pouvez via les options de l''éditeur formater votre texte. Afin de valider la modification de la cellule, un simple clique sur <b>une autre</b> cellule suffit.</p>\r\n<img src="../../../img/tslap/editer_docu.png"/>\r\n'),
(8, 'TSLAP : feedback','<h4>Démarche</h4>\r\n<p>Au cours de mon stage de deuxième année de BTS, mon équipe et moi, sommes aller à la rencontre du client afin de lui présenter un premier prototype de l''application. Nous avons dans un premier temps présenté l''application au responsable informatique de la société Atoll Palme. Nous avons ensuite invité différents utilisateurs potentiels à utiliser l''application devant nous pour nous permettre d''avoir leur impression en direct et de voir si l''application respectait bien un soucis d''ergonomie et de simplicité d''utilisation.</p>\r\n<p>Après une utilisation brève mais complète, les utilisateur nous on donner leurs impressions, leurs remarques et leur avis général sur le prototype de l''application. Avec l''équipe nous avons donc établie un nouveau cahier des charges en prenant en compte les remarques des utilsiateurs. Voici ce qui en est resorti : <a href="../../../img/tslap/tslap_feedback.pdf">feedback</a></p>\r\n<br/>\r\n<h5>résumé :</h5>\r\n<ul>\r\n	<li>Des problèmes de temps de chargement un peu long ont obligé à rafraîchir plusieurs fois la page tableau (pas toujours fonctionnel). À voir de plus près... Mettre un waiting dialog ?\r\n	</li>\r\n	<li>Changer le libellé du bouton : «créer un nouveau suivi » par « créer un nouveau suivi de commande »</li>\r\n	<li>L''Internet Explorer de l''entreprise ne semble pas accepter certaines fonctionnalités comme la présentation dynamique de champ de saisi... </li>\r\n	<li>Proposer en entête des filtres courants : « mes suivis », « autre utilisateur » (liste) et aussi : « inf. à 2 mois », « inf. à 1 an »... , « client », « etat »</li>\r\n	<li>Ajouter état « archivé » : attention cet état ne doit pas écrasé les autres.</li>\r\n	<li>Mettre en place l''upload de fichiers sur la dernières colonnes du tableau. Cela concerne les bons emmargés, et  la commande origine du client et prévoir (côté application serveur) un dossier de sauvegarde par année ?</li>\r\n</ul>\r\n<br/>\r\n<p>La présentation du prototype de l''application nous a permis d''avoir un premier avis du client sur notre travail. Cela nous a aidé à mieux cerner sa façon d''apréhender l''application, nous permettant ainsi de corriger l''interface utilisateur de manière à le satifaire au maximum. Il nous a donc été possible de redéfinir un cahier des charges tenant compte de ses attentes et nous recentrer sur l''essentiel.</p>'),
(9, 'TSLAP : veille technologique','<p>Afin de réaliser notre projet convenablement, il nous a été nécessaire, à mon équipe et moi même, de mettre en place différents systèmes de veilles technologiques afin de rester informé des dernières évolutions et mises à jours des technologies que nous utilisions.</p>\r\n<p>Notre principal source d''informations concernant le framework Spring Roo était son site officiel (<a href="http://www.springsource.org/news-events">Spring Roo News</a>) sur lequel était disponible les dernière nouvelles concernant le framework : nous nous interessions plus particulièrement au posts intitulés "THIS WEEK IN SPRING" qui nous permettait de rapidement savoir si une nouveauté était apparue sur.</p>\r\n<img src="../../../img/spring_veille.jpg" alt="sping this week"/>\r\n'),
(10, 'DUNORD : amélioration de service','<h3>Rappel du contexte:</h3>\r\n\r\n<p>L''entreprise DUNORD est une TPE (très petite entreprise) d''une quinzaine d''employés produisant des jouets.</p>\r\n<p>Elle est composée de 3 services principaux :\r\n<ul><li>Service administratif</li>\r\n<li>Service commercial</li>\r\n<li>Service production</li></p>\r\n<p>Cette entreprise a fait appel à nous étudiants, afin de produire une solution permettant une accelération du processus de déclaration de panne dans son entreprise.</p>\r\n<p>Antérieurement à notre intervention, la secretaire devait, lors d''un signalement de panne d''un matériel, noter sur une feuille volante la nature de l''accident. Cette note servait a indiquer au prestataire extérieur le problème qui allait intervenir sur la panne déclarée.</p>\r\n<p>La demande faite, par l''intermédiaire d''un cachier des charges précis, était de mettre a disposition de l''entreprise un outil permettant d''archiver les incidents et leur situation (résolu, en cours de traitement, non traité, définitivement en panne).</p>\r\n<p>La contrainte était d''utiliser un tableur proposant un code couleur automatique en fonction de la situation de la panne.</p><br/>\r\n<h3>La proposition de l''amélioration de service</h3>\r\n<p>Comme résumé dans le rappel du contexte, une contrainte figurant dans le cahier des charges était d''utiliser un tableur, celui-ci étant familier de la secrétaire qui s''en servirait l''apprentissage d''un nouvel outils ne serait pas necessaire. De plus les coûts imposés dans le cachier des charges limitaient l''ouverture aux différentes solutions envisageable.</p>\r\n<p>Voici une rapide présentation de ce que l''on a pu produire pour cette entreprise:\r\n<img src="../../../img/dunord/dunord1.gif"/><img src="../../../img/dunord/dunord2.gif"/><br/>\r\nLe cahier des charges était alors respecté et une accélération de processus cible était visible.</p>\r\n<p>Au terme de cette mission, réalisé pour l''entreprise Dunord, un échange avec le dirigeant de l''entreprise cliente à été engagé, sous la forme de notes de services.\r\n<p>Dans cette premiere note, la confirmation d''éxécution des taches demandées est accompagnée d''inquiétudes liées a ce nouveau processus, ainsi une ouverture vers une autre solution à été exposée.</p>\r\n<p>En voici les arguments:\r\nla nouvelle gestion informatisé des pannes entraine la génération de nouvelles statistiques plus ou moins interressantes. Un traitant plus poussé de ces statistiques devrait être mis en place afin de mieux cibler les coûts engendrés par la réparation du matériel deffectueux par exemple.\r\nCette dématérialisation de la traçabilité des pannes structure ce processus de suivis des pannes. La déclaration de panne peut être réalisée par n''importe quel salarié de l''entreprise. Cependant, le salarié doit systématiquement passer par la secrétaire. Le processus serait allégé si chacun pouvait déclarer ces pannes.</p>\r\n<p>Amélioration du service proposé:\r\nla contrainte rencontrée a cette étape a été de proposer une nouvelle solution répondant aux inquétudes soulevées tout en s''éloignant un minimum du premier cachier des charges, cela afin d''optimiser les chances d''acceptions du nouveau projet par Mr Dunord, Dirigeant de sa société.\r\nLa solution proposée aux travers ces notes de services, a été le developpement d''une application web intranet à l''entreprise connectée à une base de données, permettant le stockages des pannes.</p>\r\n\r\n\r\n<p>Avantage :\r\nChaque employé de l''entreprise peut déclarer une panne à distance (gain de temps)\r\nLes statistiques possible sur la base de données sont illimitées, contournant ainsi les lacunes du tableur en production.\r\nUne automatisation importante du processus est envisageable (gain de temps égalment)\r\nInconvénient:\r\nLégère augmentation du coût de production\r\nPerte du support famillié de la secrétaire (le tableur)\r\nConclusion\r\nJ''ai donc pu dans la démarche de restitution d''un travail éffectué suivant un cahier des charges précis, proposer une ouverture étudiée préablement afin d''améliorer un service.</P>'),
(11, 'GeTAP : contexte', '<h3>GeTAP</h3>\r\n<p>Notre mission au sein de cette équipe de développement était de réaliser une application web permettant à un établissement scolaire type « lycée » de pouvoir recenser l’ensemble des heures d’aide d’accompagnement effectuées par les élèves.  Notre tuteur nous avait posé la structure de l’application mais tout restait à faire (Création du schéma relationnel de la base de données, fonctionnalités propre à l’application du client ...). </p><p> L’équipe se constituait de 4 développeurs : notre tuteur et trois stagiaires dont moi-même.\r\nLe premier jour fut une journée « mise en place » ou nous avons pris connaissance de l’environnement de travail et commencé à mettre en place notre méthode de travail avec notre tuteur. Suite à une première rencontre en contexte professionnel avec le client, et avec l’aide de notre tuteur, nous avons rapidement établi une première check-list qui constituait les dernières tâches à réaliser afin de finir le prototype de l’application. Tous les midis nous faisions une petite réunion pour faire un topo sur l’avancement de la check-list, l’équipe se répartissait les tâches et se fixait les objectifs qu’elle allait réaliser l’après-midi. Le matin nous terminions les tâches de la veille si elles n’étaient pas finit, où nous mettions en place les modules les plus simples comme par exemple le design. Cette organisation nous permettait le matin de se remettre dans le projet assez facilement, et le soir de faire une pose au milieu des tâches les plus complexes lorsque celles-ci n’étaient pas bouclées. Tout au long du stage, plusieurs réunions ont eu lieu avec le client afin de toujours construire l’application selon ses besoins. Une présentation de la première version fonctionnelle de l’application  a été faite par notre équipe devant le client et une partie des utilisateurs potentiels.</p>\r\n'),
(12, 'TSLAP : travail en mode projet','<h3>Contexte</h3>\r\n<p>Le travail en mode projet fut nécessaire à la réalisation du projet TSLAP (<a href="{{ path(''portfolio_voir'', {''id'': 6 }) }}">Contexte</a>) développé majoritairement en télétravail. En effet, afin d''augmenter notre productivité, une organisation rigoureuse et des outils de travaux collaboratifs étaient de mise. Chaque développeur connaissait ses missions, et rendait compte de son travail chaque lundi lorsque l''équipe se retrouvait avec le tuteur pour faire un "briefing" pour la semaine.</p>\r\n<ul>\r\n	<li><a href="#github">GitHub</a></li>\r\n	<li><a href="#trello">Trello</a></li>\r\n	<li><a href="#skype">Skype</a></li>\r\n</ul>\r\n<br/>\r\n<h3 id="github">GitHub</h3>\r\n<p>Lien vers le site officiel : <a href="https://www.github.com/">GitHub</a></p>\r\n<p>GitHub est un service web d''hébergement et de gestion de développement de logiciels, utilisant le programme Git (logiciel de gestion de versions décentralisé). Un logiciel de gestion de versions est un logiciel qui permet de stocker un ensemble de fichiers en conservant la chronologie de toutes les modifications qui ont été effectuées dessus. Il permet notamment de retrouver les différentes versions d''un lot de fichiers connexes. Alors que le système traditionnel open source amène chaque contributeur à télécharger les sources du projet et à proposer ensuite ses modifications à l’équipe du projet, Github repose sur le principe du fork par défaut : toute personne peut faire un clone du projet en local pour en devenir le leader et le développer de son côté.</p>\r\n<p><img src="../../../img/github.jpg"/></p>\r\n<br/>\r\n<h3 id="trello">Trello</h3>\r\n<p>Lien vers le site officiel : <a href="https://www.trello.com/">GitHub</a></p>\r\n<p>Trello est un gestionnaire de listes collaboratif 100 % Web, il est idéal pour la gestion et le suivi des projets dont les tâches sont confiées à des ressources distantes géographiquement. Le principe de Trello est ultra-simple : fournir à une équipe dispatchée géographiquement un environnement unique et centralisé pour visualiser l’état des tâches de son projet. L’environnement en question, en l’occurrence un simple tableau, devient accessible à tout moment de n’importe où grâce à Internet.</p>\r\n<p><img src="../../../img/trello.jpg"/></p>\r\n<br/>\r\n<h3 id="skype">Skype</h3>\r\n<p>Lien vers le site officiel : <a href="http://www.skype.com/fr/"></a></p>\r\n<p>Skype est un logiciel qui permet aux utilisateurs de passer des appels téléphoniques via Internet. Les appels d’utilisateur à utilisateur sont gratuits. Il existe des fonctionnalités additionnelles comme la messagerie instantanée, le transfert de fichiers et la visioconférence ou encore le partage d''écran.</p>\r\n<p><img src="../../../img/skype.jpg"/></p>\r\n\r\n<h3>Organisation</h3>\r\n<p>Dans un premier temps nous avons donc initialisé le projet sur GitHub afin de pouvoir accéder au projet de n''importe quel lieu de travail. En effet, le projet a été réalisé principalement en télétravail. Afin d''être un maximum productif nous avons ensuite mis en place un tableau de tâche sur Trello afin d''organiser les différentes missions relatives au projet. Nous nous sommes ensuite servi du logiciel Skype afin de pourvoir travailler ensemble et d''effectuer du pair-programming (via le partage d''écran mis à disposition.</p>');

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
